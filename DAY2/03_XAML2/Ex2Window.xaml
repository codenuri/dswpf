<Window x:Class="_03_XAML2.Ex2Window"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:_03_XAML2"
        mc:Ignorable="d"
        Title="Ex2Window" Height="450" Width="800">
    <StackPanel>

        <Button Content="button1" Background="Aqua"/>
        
        <!-- MarkupExtension 에서 상속된 클래스를 XAML 에서
             Attirbute 의 값으로 사용가능합니다.
             local:Null 객체를 생성해서 약속된 메소드를 호출하는 것 
             {} 가 핵심 : 객체를 생성해서 약속된 메소드 호출 -->
        <Button Content="button2" Background="{local:Null}"/>
        
        <!-- 이미 x 이름 공간안에 Null 이라는 클래스 있습니다. -->
        <!-- 배경이 투명한 컨트롤 만들때 아래 처럼 합니다. -->
        <Button Content="button3" Background="{x:Null}"/>


        <!-- Header 에 디폴트 생성자가 없으므로 아래 코드는 에러 -->
        <!-- <Button Content="button4" FontSize="{local:Header}"/> -->
    
        <!-- 아래 코드가 Header 만들때 생성자 인자를 전달하는 코드입니다.
             new Header("FontSize") 의미 -->
        <Button Content="button4" FontSize="{local:Header FontSize}"
                                  Background="{local:Header Background}"/>

        <!-- 아래 코드는 생성자 인자가 아닌 Property 를 설정하는 예제 -->
        <!-- 위의 생성자로 전달하는 것과 차이점 명확히 알아 두세요 -->
        <Button Content="button4" 
                FontSize="{local:MyStyle Element=Title, Key=FontSize}"
                Background="{local:MyStyle Element=Title, Key=Background}"/>

        <!-- 새로운 버튼에 Element 를 Description 으로 해보세요 -->
        <Button Content="button5" 
                FontSize="{local:MyStyle Element=Description, Key=FontSize}"
                Background="{local:MyStyle Element=Description, Key=Background}"/>
        
    </StackPanel>
</Window>
